@using WebUXv2.Components
@using WebUXv2.LogicalUnits.PropertyAddress
@using WebUXv2.UserExperiences.PropertyAddress
@model IEnumerable<WebUXv2.Models.PropertyAddress>

@{
    var uxTaskId = Convert.ToInt32(Request.QueryString["uxTaskId"]);
    var tm = new TaskManager();
    var parentId = tm.GetParentLauncherRootComponentTaskId(uxTaskId);

    string componentName = ViewBag.ComponentName;
    string rootComponentName = ViewBag.RootComponentName;
    var firstAddress = Model.FirstOrDefault();

    EntityContext customerContext = ViewBag.CustomerContext;
    string customerContextJson = tm.ObjectToJson(customerContext);

}

Address
@Html.ActionLink("+Add", "RunTask", "TaskManager", new { componentName = rootComponentName, returnTaskId = uxTaskId, parentTaskId = parentId }, null)
@{
    if (firstAddress != null)
    {
        var firstAddressContext = new EntityContext(firstAddress.Id, "address", firstAddress.CommasSeparated);
        string firstAddressContextJson = tm.ObjectToJson(firstAddressContext);
        <br/>
        @Html.ActionLink(firstAddress.CommasSeparated, "RunTask", "TaskManager", new {componentName = typeof(LuAmendCustomerAddress).Name, addressContext = firstAddressContextJson, customerContext = customerContextJson, returnTaskId = uxTaskId, parentTaskId = parentId}, null)
    }
}









