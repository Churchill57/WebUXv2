@model WebUXv2.Models.PropertyAddress

@{
    var uxTaskId = ViewBag.uxTaskId;
    bool showBackButton = ViewBag.ShowBackButton;
    string backButtonText = ViewBag.BackButtonText;
}

@Html.ActionLink("Find a different customer", "ResetCustomerContextInput", "Customer", new { uxTaskId = uxTaskId }, null)
<br />
<br />
<div class="row">
    <div class="col-md-6 margin-top-20">
        @using (Html.BeginForm())
        {
            @*@Html.AntiForgeryToken()*@

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Line1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Line1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Line1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Line2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Line2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Line2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Line3, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Line3, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Line3, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PostCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PostCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PostCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(model => model.CustomerId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CustomerId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
                        </div>*@
                    @Html.HiddenFor(model => model.CustomerId)
                </div>

                <div class="form-group">
                    <div class="col-md-8">
                        @if (showBackButton)
                {
                            @Html.ActionLink(backButtonText, "Back", "TaskManager", new { uxTaskId = uxTaskId }, new { @class = "btn btn-danger" })
                            <span>&nbsp; &nbsp;</span>
                        }
                        <input type="submit" value="Submit" class="btn btn-success" />
                        &nbsp;&nbsp;
                    </div>
                </div>

            </div>
        }
    </div>
    <div class="col-md-6 margin-top-20">
        @{Html.RenderAction("SecondaryTasks", "TaskManager", new { uxTaskId = uxTaskId });}
    </div>

</div>
