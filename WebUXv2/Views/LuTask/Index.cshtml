@using WebUXv2.Components
@using WebUXv2.LogicalUnits.TaskManager
@using WebUXv2.Models
@model IEnumerable<WebUXv2.Models.LuTask>

@{
    ViewBag.Title = "Index";
}

<h2>Logical Units</h2>

<p>
    @*@Html.ActionLink("Create New", "Create")*@

    @*@if (@User.IsInRole("Admin"))*@
        @Html.ActionLink("Delete All", "DeleteAllTasks", "TaskManager", null, new { @class = "btn btn-default" })
</p>
<table  class="table table-striped table-hover">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th>
            Parent @Html.DisplayNameFor(model => model.ParentLuTask.Id)
        </th>
        <th>
            Parent @Html.DisplayNameFor(model => model.ParentLuTask.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ClientRef)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UserName)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.State)
        </th>*@
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
                @{
                    if (item.Name == typeof(LuLauncher).Name && item.Status == LogicalUnitStatusEnum.Started)
                    {
                        @Html.ActionLink("Resume", "ResumeTask", "TaskManager", new { componentTaskId = item.Id }, null)
                    }
                }

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ParentLuTask.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ParentLuTask.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ClientRef)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.State)
            </td>*@
            <td>
                @*@Html.ActionLink("Edit", "Edit", new { id=item.Id }) |*@
                @Html.ActionLink("Details", "Details", new { id = item.Id })
                @*@Html.ActionLink("Delete", "Delete", new { id=item.Id })*@
            </td>

        </tr>
                    }

</table>
