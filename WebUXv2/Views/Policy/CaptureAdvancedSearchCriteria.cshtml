@model WebUXv2.Models.CustomerAdvancedSearchCriteria

@{
    var uxTaskId = ViewBag.uxTaskId;
    bool showSwitchToBasic = ViewBag.ShowSwitchToBasic;
    bool showBackButton = ViewBag.ShowBackButton;
    string backButtonText = ViewBag.BackButtonText;
}

@if (showSwitchToBasic) {@Html.ActionLink("Switch to basic Search", "SwitchToBasicSearch", new { uxTaskId = uxTaskId })}
<hr />

<script>
    $(window).unload(
        function () {
            $.ajax({
                type: "POST",
                url: "@(Url.Action("SaveAdvancedSearchCriteria", "Customer",new {uxTaskId = uxTaskId}))",
                data: $("form").serialize()
            });
        }
    )
</script>

<div class="row">
    <div class="col-md-6">

        @using (Html.BeginForm())// "CaptureAdvancedSearchCriteria","Customer", new { uxTaskId = uxTaskId }))
        {
           @*@Html.AntiForgeryToken()*@

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.NINO, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NINO, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NINO, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.Town, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Town, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Town, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.PostCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PostCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PostCode, "", new { @class = "text-danger" })
                    </div>
                </div>


                @if (showBackButton)
                {
                    @Html.ActionLink(backButtonText, "Back", "TaskManager", new { uxTaskId = uxTaskId }, new { @class = "btn btn-danger" })
                    <span>&nbsp; &nbsp;</span>
                }
                <input type="submit" value="Search" class="btn btn-success" />
                <br />
                <br />
                <br />
                @Html.ActionLink("Clear fields", "ResetAdvancedSearchCriteria", new { uxTaskId = uxTaskId }, new { @class = "btn btn-warning" })

            </div>
        }

    </div>


    <div class="col-md-6">
        @{Html.RenderAction("SecondaryTasks", "TaskManager", new { uxTaskId = uxTaskId });}
        <br/>
        @Html.Action("RecentCustomerList", "EntityContext", new { selectAction = "RecentCustomerSelectedFromAdvancedSearch", selectController = "Customer" })
    </div>

</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
